Using System
Using System.Data
Using System.Configuration
Using System.Collections
Using System.Web
Using System.Web.Security
Using System.Web.UI
Using System.Web.UI.WebControls
Using System.Web.UI.WebControls.WebParts
Using System.Web.UI.HtmlControls
Using System.Text.RegularExpressions

BegClass views_UpdateCustomer Partial(*Yes) Access(*Public) Extends(System.Web.UI.Page)

    DclDB DGServer DBName("*Public/DG Net Local")
    
    DclDiskFile CustomerByNumber +
        Type(*Update) +
        Org(*Indexed) + 
        Prefix(Customer_) + 
        File("Examples/CMastNewL1") +
        DB(DGServer) +
        ImpOpen(*No) + 
        AddRec(*Yes) 

    BegEnum IOStatus 
        DclEnumFld OK                   
        DclEnumFld UndefinedError       
        DclEnumFLd ConcurrencyViolation
        DclEnumFld RecordNotFound 
    EndEnum 

    BegSr Page_Load Access(*Private) Event(*This.Load)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)
               
        If (NOT Page.IsPostBack)
            textboxCMCustNo.Text = Session["customernumber"].ToString()
            PopulateStateDropDown()
            PopulateStatusDropDown()
            ReadRecord()
        EndIf
    EndSr

    BegSr ConnectServer
        DGServer.DBName = Application["DBName"].ToString()
        Connect DGServer
        Open CustomerByNumber
    EndSr

    BegSr DisconnectServer
        Disconnect DGServer
        Close *All
    EndSr

    BegFunc ReadRecord Type(*Integer4)
        DclFld Result Type(*Integer4) 

        Result = IOStatus.OK
    
        ConnectServer()
    
        Customer_CMCustNo = textboxCMCustNo.Text 
    
        Chain CustomerByNumber Key(Customer_CMCustNo) Access(*NoLock)  
        If (CustomerByNumber.IsError)
            Result = IOStatus.UndefinedError
        Else             
            If (CustomerByNumber.IsFound)
                PopulateUIFromRecord()
            Else
                Result = IOStatus.RecordNotFound
            EndIf
        EndIf 

        DisconnectServer()

        LeaveSr Result
    EndFunc 
    
    BegSr PopulateUIFromRecord
        Page.Title = "Updating: " + Customer_CMName 
    
        // Populate the user interface from the record format.
        textboxCMName.Text     = Customer_CMName.Trim()
        textboxCMAddr1.Text    = Customer_CMAddr1.Trim()
        textboxCMCity.Text     = Customer_CMCity.Trim() 
        textboxCMPhone.Text    = Customer_CMPhone.Trim()
        textboxCMPostCode.Text = Customer_CMPostCode.Trim()
        textboxCMCntry.Text    = Customer_CMCntry.Trim()
        textboxCMFax.Text      = Customer_CMFax.ToString("(000) 000-0000") 
        
        dropdownlistCMState.SelectedValue = Customer_CMState   
        dropdownlistCMActive.SelectedValue = Customer_CMActive

        // MS info on numeric formatting
        // http://msdn.microsoft.com/en-us/library/0c899ak8.aspx
        // MS Info on date formatting
        // http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx
        // 3rd party string formatting cheat sheet.
        // http://john-sheehan.com/blog/net-format-string-cheat-sheet/        
    EndSr   

    BegFunc UpdateRecord Type(*Integer4)
        DclFld Result Type(*Integer4) 
        
        Result = IOStatus.OK
        
        ConnectServer()

        Customer_CMCustNo = textboxCMCustNo.Text 

        // Read record for update.
        Chain CustomerByNumber Key(Customer_CMCustNo) 
        If (CustomerByNumber.IsError) 
            Result = IOStatus.UndefinedError
        Else 
            If (CustomerByNumber.IsFound)
                PopulateRecordFromUI()
                Update CustomerByNumber                
            Else
                Result = IOStatus.RecordNotFound
            EndIf
        EndIf    

        DisconnectServer()

        LeaveSr Result
    EndFunc  
    
    BegSr PopulateRecordFromUI
        // Populate the record format from the user interface.
        Customer_CMName      = textboxCMName.Text        
        Customer_CMAddr1     = textboxCMAddr1.Text
        Customer_CMCity      = textboxCMCity.Text
        Customer_CMPhone     = textboxCMPhone.Text
        Customer_CMPostCode  = textboxCMPostCode.Text
        Customer_CMCntry     = textBoxCMCntry.Text 

        Customer_CMState = dropdownlistCMState.SelectedValue
        Customer_CMActive = dropdownlistCMActive.SelectedValue
        
        DclConst NON_DIGITS Value("\D") 
        
        // A great .NET regex cheat sheet.
        // http://regexlib.com/cheatsheet.aspx        
        // Needs this using statement:    
        // Using System.Text.RegularExpressions
        Customer_CMFax = "0" + Regex.Replace(textboxCMFax.Text, NON_DIGITS, String.Empty) 
    EndSr        


	BegSr buttonOK_Click Access(*Private) Event(*This.buttonOK.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

        DclFld Result Type(*Integer4) Inz(-1)
        
        If (Page.IsValid) 
            Result = UpdateRecord()
            If (Result = IOStatus.OK)
                Session["number"] = Customer_CMCustNo
                Session["name"  ] = Customer_CMName            
                RemoveSessionVariables()
                Response.Redirect("ListCustomers.aspx") 		
            Else
                buttonOK.Enabled = *False                 
                buttonRefresh.Enabled = *True 
            EndIf
        EndIf		
	EndSr

	BegSr buttonCancel_Click Access(*Private) Event(*This.buttonCancel.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)
       
        Session["number"] = Session[ "firstrownumber" ] 
        Session["name"  ] = Session[ "firstrowname"   ]       
        RemoveSessionVariables()
        Response.Redirect("ListCustomers.aspx") 		
	EndSr

    BegSr RemoveSessionVariables
        Session.Remove("customernumber")
        Session.Remove("firstrownumber") 
        Session.Remove("firstrowname") 
    EndSr

	BegSr customvalidatorCMAddr1_ServerValidate Access(*Private) Event(*This.customvalidatorCMAddr1.ServerValidate)
		DclSrParm source Type(*Object)
		DclSrParm args Type(System.Web.UI.WebControls.ServerValidateEventArgs)

        If ( textboxCMAddr1.Text.Trim().ToLower().StartsWith("po"))
            args.IsValid = *False
        EndIf
	EndSr

    BegSr PopulateStatusDropDown
        DclFld li Type( ListItem ) 
        
        li = *New ListItem( "Active", "1" ) 
        dropdownlistCMActive.Items.Add( li ) 

        li = *New ListItem( "Inactive","0" )
        dropdownlistCMActive.Items.Add( li ) 
    EndSr

    BegSr PopulateStateDropDown
        DclFld sl Type( USStatesList ) New( DGServer ) 

        dropdownlistCMState.DataTextField = "Text"
        dropdownlistCMState.DataValueField = "Value"
        dropdownlistCMState.DataSource = sl.GetList()
        dropdownlistCMState.DataBind()
    EndSr 

EndClass
